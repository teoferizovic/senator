version: '3'

services:
  senator_mysql:
    container_name: "senator_db"
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    networks:
      - default
    restart: always
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "8306:3306"
    # setting some env vars to create the DB
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "proba"
      MYSQL_USER: "tester"
      MYSQL_PASSWORD: "secret"
      # OR if you want to use "root" as the user, just these two lines
      # MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      # MYSQL_DATABASE: ${DATABASE_NAME}

    # we mount a data volume to make sure we don't lose data
    volumes:
      - ./docker/db/mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
  senator_phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    depends_on:
      - senator_mysql
    ports:
      - "6066:80"
    environment:
      - PMA_HOST=senator_db
      - PMA_PORT=3306
    volumes:
      - /sessions
    container_name: phpmyadmin_senator
  senator_app_go:
    container_name:  "senator_app"
    # we want to use the image which is build from our Dockerfile
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    # we are depending on the mysql backend
    depends_on:
      - senator_mysql
    # We mount the working dir into the container, handy for development
    # This is what makes the hot reloading work inside of a Docker container
    volumes:
      - .:/app/

networks:
  default:
volumes:
  mysql_data: